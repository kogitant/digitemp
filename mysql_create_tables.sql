##########################################################################
# $Id: mysql_create_tables.sql,v 1.2 2006-11-13 08:40:07 KoantdebAdminAnttiKoivisto Exp $
##########################################################################
##
## Digitemp mydql database initialization script
## This script is used to generate tables & user rights to a mysqldatabase
## First you have to create a database called digitemp:
## 	mysqladmin create digitemp -u root -p
##
## Then grant rights to the user digigitemp:
## 	mysql mysql -u root -p < mysql_grant_rights.sql
##
## Then create these tables to mysql:
## 	mysql digitemp -u root -p < mysql_create_tables.sql
##
## That is it...
##
##########################################################################
# $Log: mysql_create_tables.sql,v $
# Revision 1.2  2006-11-13 08:40:07  KoantdebAdminAnttiKoivisto
# *** empty log message ***
#
# Revision 1.1  2005/11/03 12:01:32  ak
# README & other usage information written
#
##########################################################################

## TemperatureID is the unique id of the temperature reading. This is is generated by mysql.
## Time is the timestamp generated by mysql when storing the reading. (The timestamp from mysql is used instead of the timestamp from elsewhere to get better data integrity in the case of multiple hosts reporting temperatures to the sdame database.
## SensorID is the unique id of the sensor mapped through sensor table to the physical serial number of the device. Digitemp also produces a number for the devices, but this number is not used here as it may change when devices are added to the network.
## LocationID defined the location where the sensor is. This ID is fetched from the location table before writing data to the temperature table
## Temperature field is used to store the temperature in degrees Celsius.
CREATE table Temperature (
  TemperatureID int(11) NOT NULL auto_increment,
  Time timestamp NOT NULL,
  SensorID int(11) NOT NULL,
  LocationID int(11) NOT NULL,
  Temperature decimal(6,2) NOT NULL,
  PRIMARY KEY (TemperatureID),
  KEY serial_key (SensorID),
  KEY location_key (LocationID),
  KEY time_key (Time)
);

## LocationID is the unique id of the location. This ID is used to map a reading from a sensor to a location. (Places of sensors may change...)
## SerialNumber is the SerialNumber of the device in the location
## Description describes the location 
CREATE table Location (
  LocationID int(11) NOT NULL,
  SensorID int(11) NOT NULL,
  Description varchar(255) NOT NULL,
  PRIMARY KEY (LocationID),
  KEY sensor_key (SensorID)
);


## Sensor table maps a physical sensor with a unique SerialNumber to a unique SensorID
## SensorID is the unique sensorID assigned to a unique SerialNumber
## SensorTypeID defines what kind of a sensor this sensor is (This is the PartNumber of the sensor (For example DS18S20))
## SerialNumber is the unique indentifier of the sensor (reported by the sensor)
## Description describes when the sensor was bought etc.
CREATE table Sensor (
  SensorID int(11) NOT NULL auto_increment,
  SensorTypeID varchar(15) NOT NULL,
  SerialNumber varchar(17) NOT NULL,
  Description varchar(255) NOT NULL,
  PRIMARY KEY (SensorID),
  KEY type_key (SensorTypeID),
  KEY serial_key (SerialNumber)
);


## SensorType table maps a physical sensor with its device type spesific details that are common amongst same products.
## SensorTypeID defines what kind of a sensor this sensor is (This is the PartNumber of the sensor (For example DS18S20))
## Description describes the sensor spesifications.
CREATE table SensorType (
  SensorTypeID varchar(15) NOT NULL,
  Description varchar(255) NOT NULL,
  PRIMARY KEY (SensorTypeID)
);
